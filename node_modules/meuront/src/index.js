//https://numb86-tech.hatenablog.com/entry/2019/06/28/22
/* npm uninstall パッケージしてから再度インストールする */

class Meuront {

    mountId;
    vDomTreeA;
    vDomTreeB;
    /* 値がインスタンスで共通するのでクラス変数にするべき？ */
    static events = {
        "onClick": "click",
        "onKeyUp": "keyup"
    }

    constructor(component) {

        this.mountId = component.mountId;
        this.vDomTreeA = component.elements;
        this.vDomTreeB = JSON.parse(JSON.stringify(this.vDomTreeA));
        this.render(this.vDomTreeA, true);
    }

    /* ブラウザ上でしか実行できないメソッド */
    /* デフォルト変数値が効かない */
    render(obj, root) {

        var ele = document.createElement(obj.tag);

        Object.keys(obj.attributes).forEach((key) => {
            if (Object.keys(Meuront.events).indexOf(key) != -1) {
                ele.addEventListener(Meuront.events[[key]], obj.attributes[[key]]);
            } else {
                ele.setAttribute(key, obj.attributes[[key]]);
            }
        });
            
        obj.children.forEach((child) => {
            if (typeof child == "object") {
                ele.appendChild(this.render(child, false));
            } else {
                ele.appendChild(document.createTextNode(child));
            }
        });

        if (root == true) {
            document.getElementById(this.mountId).appendChild(ele);
        }

        return ele;

    }

    compareDifferences() {

        //Object.keys(this.vDomTreeA).map

    }

    /* ライフサイクル関数 */

}

module.exports = Meuront;

/*
var App = new Meuront({
    mountId: "app", 
    elements: {
        tag: "div", attributes: {}, children: [
            {tag: "input", attributes: {type: "text", onKeyUp: (e) => keyUpFunc(e)}, children: []},
            {tag: "input", attributes: {type: "button", value: "押せ!", onClick: (e) => clickFunc(e)}, children: []},
            {tag: "span", attributes: {class: "message"}, children: [
               "こんにちは"
            ]}
        ]
    },
}); 

App.vDomTreeB.children[2].children[0] = "さっさと帰りやがれ";
App.compareDifferences();
*/